name: CI

on:
  push:
    branches:
      - master
      - "[0-9]+.[0-9]+.x"
      - "*-wip"
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+rc[0-9]+"
  pull_request:
    branches:
      - master
      - "[0-9]+.[0-9]+.x"

jobs:
  analysis:
    name: "Static analysis"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v2

      - name: "Set up Python"
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: "Install dependencies"
        run: |
          python3 -m pip install --upgrade pip
          if [ -f .github/requirements.txt ]; then
            python3 -m pip install -r .github/requirements.txt;
          fi
          if [ -f requirements.txt ]; then
            python3 -m pip install -r requirements.txt;
          fi
          if [ -f test/requirements.txt ]; then
            python3 -m pip install -r test/requirements.txt;
          fi

      - name: "Lint"
        run: make style

      - name: "Static analysis"
        run: make static_analysis

  test:
    name: "Test"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [
            "Ubuntu 18.04 - Python 3.6",
            "Ubuntu 20.04 - Python 3.8"
        ]

        include:
          - name: "Ubuntu 18.04 - Python 3.6"
            os: "ubuntu-18.04"
            python: "3.6"
            is-main-target: false

          - name: "Ubuntu 20.04 - Python 3.8"
            os: "ubuntu-20.04"
            python: "3.8"
            is-main-target: true

    steps:
      - name: "Check out repository"
        uses: actions/checkout@v2

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install dependencies"
        run: |
          sudo apt-get install bash zsh
          python3 -m pip install --upgrade pip
          if [ "${{ matrix.os }}" == "ubuntu-18.04" ]; then
              # Sarge doesn't want to install otherwise...
              python3 -m pip install --upgrade setuptools;
          fi
          if [ -f requirements.txt ]; then
            python3 -m pip install -r requirements.txt;
          fi
          if [ -f test/requirements.txt ]; then
            python3 -m pip install -r test/requirements.txt;
          fi

      - name: "Unit tests"
        run: |
          make unit_test-coverage
          mkdir CoverageReport
          mv htmlcov CoverageReport/unit

      - name: "Integration tests"
        run: |
          make integration_test-coverage
          mv htmlcov CoverageReport/integration

      - name: "Shell versions"
        run: |
          bash --version | head -n 1
          zsh --version  | head -n 1

      - name: "System tests"
        run: |
          make system_test-coverage
          mv htmlcov CoverageReport/system

      - name: "Generate merged coverage report"
        if: ${{ matrix.is-main-target }}
        continue-on-error: true
        run: |
          make coverage
          mv htmlcov CoverageReport/Coverage

      - name: "Upload Coverage artefacts"
        if: ${{ matrix.is-main-target }}
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: "Coverage HTML (for ${{ matrix.name }})"
          path: "CoverageReport/*"

  documentation:
    name: "Documentation"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v2

      - name: "Set up Python"
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: "Install dependencies"
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            python3 -m pip install -r requirements.txt;
          fi
          if [ -f docs/requirements.txt ]; then
            python3 -m pip install -r docs/requirements.txt;
          fi

      - name: "Generate documentation"
        run: make docs

      - name: "Upload documentation artefact"
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: "Documentation (HTML)"
          path: "docs/_build/html"
